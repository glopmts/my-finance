generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  clerkId       String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLogin     DateTime? @updatedAt

  // Relacionamentos
  categories   Category[]
  transactions Transaction[]
  salaries     Salary[]
  budgets      Budget[]
  Fixed        Fixed[]
}

enum AccountType {
  CHECKING
  SAVINGS
  INVESTMENT
  CREDIT_CARD
  CASH
  OTHER
}

model Category {
  id        String       @id @default(cuid())
  name      String
  color     String?
  icon      String?
  type      CategoryType @default(EXPENSE)
  isActive  Boolean      @default(true)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  // Relacionamentos
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  budgets      Budget[]
  Fixed        Fixed[]

  @@index([userId])
}

enum CategoryType {
  INCOME
  EXPENSE
}

model Transaction {
  id          String          @id @default(cuid())
  amount      Float
  date        DateTime        @default(now())
  description String?
  type        TransactionType
  isRecurring Boolean         @default(false)
  recurringId String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  isFixed     Boolean         @default(false)

  userId     String
  user       User      @relation(fields: [userId], references: [id])
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  fixedId String? @unique
  fixed   Fixed?  @relation(fields: [fixedId], references: [id])

  @@index([userId])
  @@index([categoryId])
  @@index([date])
  @@index([isFixed])
}

model Fixed {
  id          String    @id @default(cuid())
  name        String
  amount      Float
  frequency   Frequency @default(MONTHLY)
  nextDueDate DateTime
  isActive    Boolean   @default(true)
  description String?

  transaction Transaction?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([nextDueDate])
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

model Salary {
  id          String    @id @default(cuid())
  amount      Float
  description String?
  paymentDate DateTime
  isRecurring Boolean   @default(true)
  frequency   Frequency @default(MONTHLY)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId])
}

enum Frequency {
  WEEKLY
  BIWEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
}

model Budget {
  id        String   @id @default(cuid())
  amount    Float
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId     String
  user       User     @relation(fields: [userId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  @@index([userId])
  @@index([categoryId])
}
